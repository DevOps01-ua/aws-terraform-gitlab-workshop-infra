.plan_template: &plan_template
  before_script:
    - apk add --no-cache curl unzip bash python3 py3-pip jq aws-cli git
    - export TERRAFORM_VERSION=1.11.2
    - curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - mv terraform /usr/local/bin/
    - rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - terraform version
    - |
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
      $(aws sts assume-role-with-web-identity \
      --role-arn ${ROLE_ARN} \
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}" \
      --web-identity-token ${GITLAB_OIDC_TOKEN} \
      --duration-seconds 3600 \
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
      --output text))
    - aws sts get-caller-identity
  script:
    - terraform init
    - terraform plan -out $CI_PROJECT_DIR/infra-plan.out
  artifacts:
    paths:
      - $CI_PROJECT_DIR/infra-plan.out
    expire_in: 1 day


.apply_template: &apply_template
  before_script:
      - apk add --no-cache curl unzip bash python3 py3-pip jq aws-cli git
      - export TERRAFORM_VERSION=1.11.2
      - curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - terraform version
      - |
        export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
        $(aws sts assume-role-with-web-identity \
        --role-arn ${ROLE_ARN} \
        --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}" \
        --web-identity-token ${GITLAB_OIDC_TOKEN} \
        --duration-seconds 3600 \
        --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
        --output text))
      - aws sts get-caller-identity
  when: manual
  script:
    - |
      if [ -f $CI_PROJECT_DIR/infra-plan.out ]; then
        terraform init 
        terraform apply -auto-approve -input=false $CI_PROJECT_DIR/infra-plan.out
      else
        echo "Artifact not found, skipping apply"
        exit 0
      fi